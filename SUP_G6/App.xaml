<Application x:Class="SUP_G6.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SUP_G6" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.AeroLite"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="ButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="TextElement.FontFamily" Value="/Assets/Fonts/#Star Jedi"/>
            <Setter Property="Height" Value="71"/>
            <Setter Property="Width" Value="285"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="40" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="Yellow">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" >
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                    
                </Setter.Value>
                
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True" >
                    <Setter Property="Background" Value="#DBDB0B" />
                </Trigger>
                
            </Style.Triggers>
        </Style>
        


        
        
        <Style x:Key="StarWarsFont" TargetType="Label">
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="TextElement.FontFamily"
                    Value="/Assets/Fonts/#Star Jedi">

            </Setter>
        </Style>

        <Style x:Key="StarWarsRadioButtonFont" TargetType="RadioButton">
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="TextElement.FontFamily" Value="/Assets/Fonts/#Star Jedi">
                
            </Setter>
        </Style>
        <Style x:Key="StarWarsTextFont" TargetType="TextBox">
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="TextElement.FontFamily" Value="/Assets/Fonts/#Star Jedi">

            </Setter>
        </Style>
        <Style x:Key="StarWarsTextBlockFont" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="TextElement.FontFamily" Value="/Assets/Fonts/#Star Jedi">

            </Setter>
        </Style>
        <Style x:Key="StarWarsListBoxFont" TargetType="ListBox">
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="TextElement.FontFamily" Value="/Assets/Fonts/#Star Jedi" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            



        </Style>



        <!--Following code was originally written by Stack Overflow-user: Lucifer and then modyfied to suit the UI-requirements of thiss application.  The original code can be found at https://stackoverflow.com/questions/10487285/custom-listbox-scrollbar-style-issue--> 
        
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            
            <Setter Property="BorderThickness" Value="1"/>
           
            
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <Rectangle Fill="Transparent" RadiusX="10" RadiusY="10" Opacity="0.195" />
                            <Border CornerRadius="10" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                                <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{DynamicResource ScrollViewerControlTemplate1}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" />
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
            </Grid>
        </ControlTemplate>
        <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="Yellow" Offset="0"/>
            <GradientStop Color="Yellow" Offset="0.20"/>
            <GradientStop Color="Yellow" Offset="0.80"/>
            <GradientStop Color="Yellow" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="Yellow"/>

 
       
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Height="25" Width="8" Fill="Yellow" RadiusX="5" RadiusY="5">
                            <Rectangle.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="10" Color="Yellow" />
                            </Rectangle.Effect>
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Yellow" Offset="0"/>
            <GradientStop Color="Yellow" Offset="0.20"/>
            <GradientStop Color="Yellow" Offset="0.80"/>
            <GradientStop Color="Yellow" Offset="1"/>
        </LinearGradientBrush>
       
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border Width="1" Background="Yellow" HorizontalAlignment="Center"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">

                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
           
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Foreground" Value="Yellow" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TextElement.FontFamily" Value="/Assets/Fonts/#Star Jedi" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="Yellow"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Yellow"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
<!-- End of codesnippet from Stack overflow-->



    </Application.Resources>
</Application>
